import telebot # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É telebot –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API Telegram
import re # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É re –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏
from telebot import types   # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å types –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä

from app_rag.rag_presenter_app_bot import BotPresenter # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å BotPresenter –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GPT-–º–æ–¥–µ–ª—å—é

message_error = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ /start. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º\n @sams3pi01" # –û—à–∏–±–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º
class MessageHandler: # –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

    def __init__(self, bot, presenter: BotPresenter):  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –∫–ª–∞—Å—Å–∞
        self.bot = bot # –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
        self.presenter = presenter  # –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç BotPresenter
        self.gif_message_id = None # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID GIF-—Å–æ–æ–±—â–µ–Ω–∏—è

    def handle_start(self, message):  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        keyboard = types.ReplyKeyboardMarkup() # –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        button2 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å üìÖ") # –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å"
        keyboard.add(button2)  # –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        self.bot.reply_to( # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
            message,
            "üëã –ü—Ä–∏–≤–µ—Ç! ‰Ω†Â•ΩÔºÅ\n\n–Ø —Ç–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫–∏—Ç–∞–π—Å–∫–∏–º –°–ú–ò. \n\n–Ø —É–º–µ—é —á–∏—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–æ–º –∏ –∏–∑–≤–ª–µ–∫–∞—Ç—å –∏–∑ –Ω–∏—Ö –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n\n–ì–æ—Ç–æ–≤ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∏—Ç–∞–π—Å–∫–∏–º –°–ú–ò!",
            reply_markup=keyboard,  # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        )

    def handle_message(self, message):  # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å" in message.text: # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ñ—Ä–∞–∑—É "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å"
            self.choose_period(message) # –í—ã–∑—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
        else:
            try:
                self.bot.reply_to(message, "–î–∞–π—Ç–µ –ø–æ–¥—É–º–∞—Ç—å...\n\n" + message.text) # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ "–î–∞–π—Ç–µ –ø–æ–¥—É–º–∞—Ç—å..."
                self.send_waiting_gif(message) # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç GIF-–∞–Ω–∏–º–∞—Ü–∏—é
                gpt_response = self.presenter.send_query(message.text) # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å GPT-–º–æ–¥–µ–ª–∏
                # escaped_response = self.escape_markdown_v2(gpt_response) # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç GPT-–º–æ–¥–µ–ª–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–º –∫–æ–¥–µ)
                self.delete_gif_message(message) # –£–¥–∞–ª—è–µ—Ç GIF-–∞–Ω–∏–º–∞—Ü–∏—é
                self.bot.reply_to(message, gpt_response) # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç GPT-–º–æ–¥–µ–ª–∏
            except Exception as ex: # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è
                print(ex)  # –í—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
                self.bot.reply_to(message, message_error) # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

    def escape_markdown_v2(self, text):  # –ú–µ—Ç–æ–¥ –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        escape_chars = r'\_*[]()~`>#+-=|{}.!' # –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å
        return re.sub(f'([{re.escape(escape_chars)}])', r'\\\1', text) # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–∏–º–≤–æ–ª—ã –≤ —Ç–µ–∫—Å—Ç–µ
    
    def start_discussion(self, message): # –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–º –∫–æ–¥–µ)
        # Placeholder for starting a new dialog with context saving
        self.bot.reply_to(
            message, "–ù–∞—á–∞—Ç–æ –Ω–æ–≤–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ üìù. (–ö–æ–Ω—Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω.)"
        )

    def choose_period(self, message): # –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
        # Placeholder for handling period selection
        self.bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 2016-2023:") # –ü—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –≥–æ–¥
        self.bot.register_next_step_handler(message, self.get_year) # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

    def get_year(self, message): ## –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≥–æ–¥–æ–º
        try:
            period = int(message.text) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —á–∏—Å–ª–æ
            self.presenter.period = period # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–µ—Ä–∏–æ–¥ –≤ –æ–±—ä–µ–∫—Ç BotPresenter
            self.bot.reply_to(message, f"–ì–æ–¥: {period} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –í–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –Ω–µ –ø–æ–∑–∂–µ {period} –≥–æ–¥–∞.") # # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–∏–æ–¥–∞
        except Exception as ex:  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            print(ex)  # –í—ã–≤–æ–¥–∏—Ç –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
            self.bot.reply_to(message, f"–•–º...\n\n–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —á–∏—Å–ª–æ.") # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≥–æ–¥

    def handle_help(self, message): #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        self.bot.send_message(  # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
            message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /help", parse_mode="html"
        )

    def send_waiting_gif(self, message): # –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF-–∞–Ω–∏–º–∞—Ü–∏–∏
        # Sending a GIF file to the user while waiting for GPT response
        gif_path = "/app/app_rag/sources/tom-ching-cheng-hanji.gif"  # Update with the actual path to your GIF file #–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É GIF (–Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å)
        with open(gif_path, "rb") as gif: # –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª GIF –¥–ª—è —á—Ç–µ–Ω–∏—è –≤ –¥–≤–æ–∏—á–Ω–æ–º —Ä–µ–∂–∏–º–µ
            sent_message = self.bot.send_animation(message.chat.id, gif)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç GIF-–∞–Ω–∏–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            self.gif_message_id = (  # –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                sent_message.message_id
            )  # Store the message ID of the sent GIF

    def delete_gif_message(self, message): # –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è GIF-–∞–Ω–∏–º–∞—Ü–∏–∏
        if self.gif_message_id: # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ ID GIF-—Å–æ–æ–±—â–µ–Ω–∏—è
            self.bot.delete_message(
                chat_id=message.chat.id, message_id=self.gif_message_id
            ) # –£–¥–∞–ª—è–µ—Ç GIF-—Å–æ–æ–±—â–µ–Ω–∏–µ
            self.gif_message_id = None # –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç ID GIF-—Å–æ–æ–±—â–µ–Ω–∏—è
